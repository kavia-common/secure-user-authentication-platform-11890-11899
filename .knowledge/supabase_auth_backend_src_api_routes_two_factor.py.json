{"is_source_file": true, "format": "Python", "description": "This file implements FastAPI routes for managing two-factor authentication (2FA) processes, including sending OTP codes via email, verifying OTPs, resending OTPs, and checking 2FA status. It uses dependency injection for user context, interacts with external email and session services, and defines HTTP endpoints with detailed request handling and response models.", "external_files": ["src/models/auth_models", "src/services/email_service", "src/services/session_service", "src/middleware/auth_middleware"], "external_methods": ["email_service.send_otp_email", "email_service.verify_otp", "session_service.revoke_session", "session_service.create_session", "get_current_user"], "published": ["send_2fa_otp", "verify_2fa_otp", "resend_2fa_otp", "get_2fa_status"], "classes": [], "methods": [{"name": "JSONResponse send_2fa_otp( request: TwoFactorSendRequest, current_user: Dict[str, Any] = Depends(get_current_user) )", "description": "Handles POST requests to send a 2FA OTP via email, verifying user identity and email match, and using email service to generate and send OTP.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse verify_2fa_otp( request: TwoFactorRequest, current_user: Dict[str, Any] = Depends(get_current_user) )", "description": "Handles POST requests to verify provided OTP, updates user session upon successful verification, and returns new authentication tokens.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse resend_2fa_otp( request: TwoFactorSendRequest, current_user: Dict[str, Any] = Depends(get_current_user) )", "description": "Handles POST requests to resend a new OTP to the user's email, invalidating previous OTPs.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse get_2fa_status(current_user: Dict[str, Any] = Depends(get_current_user))", "description": "Handles GET requests to check if the current session has completed 2FA.", "scope": "", "scopeKind": ""}], "calls": ["email_service.send_otp_email", "email_service.verify_otp", "session_service.revoke_session", "session_service.create_session", "get_current_user"], "search-terms": ["2fa", "otp", "two-factor authentication", "send-otp", "verify-otp", "resend-otp", "status", "auth"], "state": 2, "file_id": 17, "knowledge_revision": 75, "git_revision": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7", "revision_history": [{"35": ""}, {"46": ""}, {"68": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"69": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"70": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"71": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"72": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"75": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}], "ctags": [{"_type": "tag", "name": "get_2fa_status", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^async def get_2fa_status(current_user: Dict[str, Any] = Depends(get_current_user)) -> JSONRespon/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(current_user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "resend_2fa_otp", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^async def resend_2fa_otp($/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: TwoFactorSendRequest, current_user: Dict[str, Any] = Depends(get_current_user) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^router = APIRouter(prefix=\"\\/2fa\", tags=[\"Two-Factor Authentication\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "send_2fa_otp", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^async def send_2fa_otp($/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: TwoFactorSendRequest, current_user: Dict[str, Any] = Depends(get_current_user) )"}, {"_type": "tag", "name": "verify_2fa_otp", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^async def verify_2fa_otp($/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: TwoFactorRequest, current_user: Dict[str, Any] = Depends(get_current_user) )"}], "hash": "cc70ceeaf44fce451168aac8617192af", "format-version": 4, "code-base-name": "supabase_auth_backend", "filename": "supabase_auth_backend/src/api/routes/two_factor.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/2fa\", tags=[\"Two-Factor Authentication\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}