{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI route handlers for managing two-factor authentication (2FA). It includes endpoints to send OTP codes, verify received OTPs, resend OTPs, and check 2FA status. The code interacts with email and session services, and depends on authentication middleware, to facilitate secure 2FA workflows.", "external_files": ["src.models.auth_models", "src.services.email_service", "src.services.session_service", "src.middleware.auth_middleware"], "external_methods": ["email_service.send_otp_email", "email_service.verify_otp", "session_service.revoke_session", "session_service.create_session", "get_current_user"], "published": ["send_2fa_otp", "verify_2fa_otp", "resend_2fa_otp", "get_2fa_status"], "classes": [], "methods": [{"name": "JSONResponse send_2fa_otp( request: TwoFactorSendRequest, current_user: Dict[str, Any] = Depends(get_current_user) )", "description": "Endpoint to initiate sending a 6-digit OTP code via email for 2FA verification, checking email match and session status before sending.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse verify_2fa_otp( request: TwoFactorRequest, current_user: Dict[str, Any] = Depends(get_current_user) )", "description": "Endpoint to verify the OTP code received via email, complete 2FA, and establish a new session with 2FA marked as completed.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse resend_2fa_otp( request: TwoFactorSendRequest, current_user: Dict[str, Any] = Depends(get_current_user) )", "description": "Endpoint to resend a new OTP code to the user's email, invalidating previous codes.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse get_2fa_status(current_user: Dict[str, Any] = Depends(get_current_user))", "description": "Endpoint to check if the current session has completed 2FA verification.", "scope": "", "scopeKind": ""}], "calls": ["email_service.send_otp_email", "email_service.verify_otp", "session_service.revoke_session", "session_service.create_session"], "search-terms": ["FastAPI 2FA routes", "send OTP email", "Verify OTP code", "Resend OTP", "2FA status check", "session management", "OTP email verification"], "state": 2, "file_id": 17, "knowledge_revision": 76, "git_revision": "e4192b60cedd0518cf4cf63647dc270f7a1f9650", "revision_history": [{"35": ""}, {"46": ""}, {"68": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"69": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"70": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"71": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"72": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"75": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}, {"76": "e4192b60cedd0518cf4cf63647dc270f7a1f9650"}], "ctags": [{"_type": "tag", "name": "get_2fa_status", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^async def get_2fa_status(current_user: Dict[str, Any] = Depends(get_current_user)) -> JSONRespon/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(current_user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "resend_2fa_otp", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^async def resend_2fa_otp($/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: TwoFactorSendRequest, current_user: Dict[str, Any] = Depends(get_current_user) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^router = APIRouter(prefix=\"\\/2fa\", tags=[\"Two-Factor Authentication\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "send_2fa_otp", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^async def send_2fa_otp($/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: TwoFactorSendRequest, current_user: Dict[str, Any] = Depends(get_current_user) )"}, {"_type": "tag", "name": "verify_2fa_otp", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/two_factor.py", "pattern": "/^async def verify_2fa_otp($/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: TwoFactorRequest, current_user: Dict[str, Any] = Depends(get_current_user) )"}], "hash": "377471b1ccd54d0381f602e23e9b2d41", "format-version": 4, "code-base-name": "supabase_auth_backend", "filename": "supabase_auth_backend/src/api/routes/two_factor.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/2fa\", tags=[\"Two-Factor Authentication\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}