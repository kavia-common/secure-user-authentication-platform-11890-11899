{"is_source_file": true, "format": "Python", "description": "This source file defines an EmailService class responsible for handling email-based OTP operations, including generating OTPs, sending verification/welcome emails using SMTP, and verifying OTPs with expiration and attempt limits.", "external_files": ["src/config/settings"], "external_methods": ["settings.email_smtp_host", "settings.email_smtp_port", "settings.email_smtp_user", "settings.email_smtp_password", "settings.email_from"], "published": ["email_service"], "classes": [{"name": "EmailService", "description": "Service for handling email operations including OTP sending, verification, and welcome emails. Implements SMTP email sending, OTP management with expiration and attempt limits."}], "methods": [{"name": "str generate_otp(self, length: int = 6)", "description": "Generates a random numerical OTP of specified length.", "scope": "EmailService", "scopeKind": "class"}, {"name": "tuple[bool,str] send_otp_email(self, email: str, purpose: str = \"2fa\")", "description": "Asynchronously generates and sends an OTP email to a recipient, storing OTP details for verification.", "scope": "EmailService", "scopeKind": "class"}, {"name": "bool verify_otp(self, email: str, otp_code: str, purpose: str = \"2fa\")", "description": "Verifies provided OTP against stored OTP data, considering expiration and attempts.", "scope": "EmailService", "scopeKind": "class"}, {"name": "bool send_welcome_email(self, email: str, first_name: str)", "description": "Sends a welcome email to a new user.", "scope": "EmailService", "scopeKind": "class"}, {"name": "bool _send_email(self, to_email: str, subject: str, body: str)", "description": "Internal method to send an email via SMTP with HTML content.", "scope": "EmailService", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "EmailService", "scopeKind": "class", "description": "unavailable"}], "calls": ["self._send_email", "smtplib.SMTP", "server.starttls()", "server.login", "server.send_message"], "search-terms": ["OTP generation", "Email verification", "SMTP email sending", "In-memory OTP storage", "async email methods", "verification expiration"], "state": 2, "file_id": 11, "knowledge_revision": 49, "git_revision": "", "revision_history": [{"23": ""}, {"49": ""}], "ctags": [{"_type": "tag", "name": "EmailService", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/email_service.py", "pattern": "/^class EmailService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/email_service.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "EmailService", "scopeKind": "class"}, {"_type": "tag", "name": "_send_email", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/email_service.py", "pattern": "/^    async def _send_email(self, to_email: str, subject: str, body: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, to_email: str, subject: str, body: str)", "scope": "EmailService", "scopeKind": "class"}, {"_type": "tag", "name": "email_service", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/email_service.py", "pattern": "/^email_service = EmailService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "generate_otp", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/email_service.py", "pattern": "/^    def generate_otp(self, length: int = 6) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, length: int = 6)", "scope": "EmailService", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/email_service.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "send_otp_email", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/email_service.py", "pattern": "/^    async def send_otp_email(self, email: str, purpose: str = \"2fa\") -> tuple[bool, str]:$/", "language": "Python", "typeref": "typename:tuple[bool,str]", "kind": "member", "signature": "(self, email: str, purpose: str = \"2fa\")", "scope": "EmailService", "scopeKind": "class"}, {"_type": "tag", "name": "send_welcome_email", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/email_service.py", "pattern": "/^    async def send_welcome_email(self, email: str, first_name: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, email: str, first_name: str)", "scope": "EmailService", "scopeKind": "class"}, {"_type": "tag", "name": "verify_otp", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/email_service.py", "pattern": "/^    def verify_otp(self, email: str, otp_code: str, purpose: str = \"2fa\") -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, email: str, otp_code: str, purpose: str = \"2fa\")", "scope": "EmailService", "scopeKind": "class"}], "hash": "98bbdf5c145a07e747192e2d3300f150", "format-version": 4, "code-base-name": "supabase_auth_backend", "filename": "supabase_auth_backend/src/services/email_service.py", "fields": [{"name": "email_service = EmailService()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}