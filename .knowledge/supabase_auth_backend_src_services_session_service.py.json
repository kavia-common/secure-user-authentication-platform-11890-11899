{"is_source_file": true, "format": "Python", "description": "This Python source file defines the SessionService class, which manages user sessions including creation, validation, extension, revocation, and cleanup of sessions, utilizing JWT tokens and in-memory storage.", "external_files": ["src.services.jwt_service"], "external_methods": ["jwt_service.create_access_token", "jwt_service.verify_token"], "published": ["session_service"], "classes": [{"name": "SessionService", "description": "Service class responsible for managing user sessions, including creation, validation, extension, revocation, and cleanup processes."}], "methods": [{"name": "Dict[str,Any] create_session(self, user_id: str, user_email: str, additional_data: Optional[Dict[str, Any]] = None)", "description": "Creates a new user session with a JWT token, storing session details in-memory.", "scope": "SessionService", "scopeKind": "class"}, {"name": "tuple[bool,Optional[Dict[str,Any]]] validate_session(self, access_token: str)", "description": "Validates a session by verifying the JWT token and session data validity.", "scope": "SessionService", "scopeKind": "class"}, {"name": "bool extend_session(self, session_id: str)", "description": "Extends the expiration time of an active session.", "scope": "SessionService", "scopeKind": "class"}, {"name": "bool revoke_session(self, session_id: str)", "description": "Revokes a specific session based on its session ID.", "scope": "SessionService", "scopeKind": "class"}, {"name": "int revoke_all_user_sessions(self, user_id: str)", "description": "Revokes all sessions associated with a specific user ID.", "scope": "SessionService", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] get_session_info(self, session_id: str)", "description": "Retrieves information about a specific session.", "scope": "SessionService", "scopeKind": "class"}, {"name": "int cleanup_expired_sessions(self)", "description": "Removes all expired sessions from in-memory storage.", "scope": "SessionService", "scopeKind": "class"}, {"name": "None _expire_session(self, session_id: str)", "description": "Internal method that marks a session as expired and inactive.", "scope": "SessionService", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "SessionService", "scopeKind": "class", "description": "unavailable"}], "calls": ["jwt_service.create_access_token", "jwt_service.verify_token"], "search-terms": ["session management", "JWT token handling", "in-memory session storage", "user activity timeout", "session revocation", "session validation"], "state": 2, "file_id": 12, "knowledge_revision": 74, "git_revision": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7", "revision_history": [{"25": ""}, {"74": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}], "ctags": [{"_type": "tag", "name": "SessionService", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^class SessionService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "SessionService", "scopeKind": "class"}, {"_type": "tag", "name": "_expire_session", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^    def _expire_session(self, session_id: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, session_id: str)", "scope": "SessionService", "scopeKind": "class"}, {"_type": "tag", "name": "cleanup_expired_sessions", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^    def cleanup_expired_sessions(self) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "member", "signature": "(self)", "scope": "SessionService", "scopeKind": "class"}, {"_type": "tag", "name": "create_session", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^    def create_session(self, user_id: str, user_email: str, additional_data: Optional[Dict[str, /", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, user_id: str, user_email: str, additional_data: Optional[Dict[str, Any]] = None)", "scope": "SessionService", "scopeKind": "class"}, {"_type": "tag", "name": "extend_session", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^    def extend_session(self, session_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, session_id: str)", "scope": "SessionService", "scopeKind": "class"}, {"_type": "tag", "name": "get_session_info", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^    def get_session_info(self, session_id: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(self, session_id: str)", "scope": "SessionService", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "revoke_all_user_sessions", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^    def revoke_all_user_sessions(self, user_id: str) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "member", "signature": "(self, user_id: str)", "scope": "SessionService", "scopeKind": "class"}, {"_type": "tag", "name": "revoke_session", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^    def revoke_session(self, session_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, session_id: str)", "scope": "SessionService", "scopeKind": "class"}, {"_type": "tag", "name": "session_service", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^session_service = SessionService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "validate_session", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/session_service.py", "pattern": "/^    def validate_session(self, access_token: str) -> tuple[bool, Optional[Dict[str, Any]]]:$/", "language": "Python", "typeref": "typename:tuple[bool,Optional[Dict[str,Any]]]", "kind": "member", "signature": "(self, access_token: str)", "scope": "SessionService", "scopeKind": "class"}], "hash": "589eea1323ca2ee3debdebfd5d5e270e", "format-version": 4, "code-base-name": "supabase_auth_backend", "filename": "supabase_auth_backend/src/services/session_service.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "session_service = SessionService()", "scope": "", "scopeKind": "", "description": "unavailable"}]}