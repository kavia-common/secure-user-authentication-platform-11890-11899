{"is_source_file": true, "format": "Python", "description": "This file defines API routes for user authentication, including sign-up, login, logout, password reset, email verification, using FastAPI framework. It interacts with external services like Supabase and email service and manages user sessions and 2FA flow.", "external_files": ["src/models/auth_models", "src/services/supabase_service", "src/services/session_service", "src/services/email_service", "src/middleware/auth_middleware"], "external_methods": ["supabase_service.sign_up_user", "supabase_service.sign_in_user", "supabase_service.reset_password", "supabase_service.verify_email", "email_service.send_welcome_email", "session_service.create_session", "session_service.revoke_session", "get_current_user"], "published": ["router", "sign_up", "login", "logout", "forgot_password", "reset_password", "verify_email"], "classes": [], "methods": [{"name": "JSONResponse sign_up(user_data: UserSignUpRequest)", "description": "Handles user registration by creating a new user with Supabase and sending a welcome email.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse login(credentials: UserLoginRequest)", "description": "Authenticates user credentials, creates a session, and returns access token along with user info.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse logout(current_user: Dict[str, Any] = Depends(get_current_user))", "description": "Invalidates the current user session to log out.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse forgot_password(request: PasswordResetRequest)", "description": "Sends a password reset email to the specified user.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse reset_password(request: PasswordResetConfirmRequest)", "description": "Handles password reset confirmation, but primarily informs the user to complete the flow via Supabase.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse verify_email(token: str, email: str)", "description": "Verifies user's email with a token, updates session, and prompts for 2FA completion.", "scope": "", "scopeKind": ""}], "calls": ["supabase_service.sign_up_user", "supabase_service.sign_in_user", "supabase_service.reset_password", "supabase_service.verify_email", "email_service.send_welcome_email", "session_service.create_session", "session_service.revoke_session", "get_current_user"], "search-terms": ["FastAPI auth routes", "Supabase sign-up", "email verification", "session management", "2FA flow", "password reset"], "state": 2, "file_id": 16, "knowledge_revision": 78, "git_revision": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7", "revision_history": [{"33": ""}, {"78": "6ad20ab69f3fbc943e47aacf4d49fc9b4afde8e7"}], "ctags": [{"_type": "tag", "name": "forgot_password", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/auth.py", "pattern": "/^async def forgot_password(request: PasswordResetRequest) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(request: PasswordResetRequest)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/auth.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/auth.py", "pattern": "/^async def login(credentials: UserLoginRequest) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(credentials: UserLoginRequest)"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/auth.py", "pattern": "/^async def logout(current_user: Dict[str, Any] = Depends(get_current_user)) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(current_user: Dict[str, Any] = Depends(get_current_user))"}, {"_type": "tag", "name": "reset_password", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/auth.py", "pattern": "/^async def reset_password(request: PasswordResetConfirmRequest) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(request: PasswordResetConfirmRequest)"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/auth.py", "pattern": "/^router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "sign_up", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/auth.py", "pattern": "/^async def sign_up(user_data: UserSignUpRequest) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(user_data: UserSignUpRequest)"}, {"_type": "tag", "name": "verify_email", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/api/routes/auth.py", "pattern": "/^async def verify_email(token: str, email: str) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(token: str, email: str)"}], "hash": "34944f8d12e06892a9f3259fbd8afb41", "format-version": 4, "code-base-name": "supabase_auth_backend", "filename": "supabase_auth_backend/src/api/routes/auth.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}