{"is_source_file": true, "format": "Python", "description": "Source code for SupabaseService class providing authentication-related operations using Supabase client.", "external_files": ["src/config/settings.py"], "external_methods": ["create_client", "Client"], "published": ["supabase_service"], "classes": [{"name": "SupabaseService", "description": "Service class for handling Supabase authentication operations, including sign up, sign in, token management, password reset, user updates, and email verification."}], "methods": [{"name": "__init__(self)", "description": "Initializes SupabaseClient instances for regular and admin operations.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] sign_up_user(self, email: str, password: str, user_metadata: Dict[str, Any])", "description": "Signs up a new user with email, password, and user metadata.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] sign_in_user(self, email: str, password: str)", "description": "Authenticates a user with email and password.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] get_user_by_token(self, access_token: str)", "description": "Retrieves user info using an access token.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] refresh_session(self, refresh_token: str)", "description": "Refreshes the user's session using a refresh token.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] sign_out_user(self, access_token: str)", "description": "Signs out the user based on the access token.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] reset_password(self, email: str)", "description": "Sends a password reset email.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] update_user(self, access_token: str, updates: Dict[str, Any])", "description": "Updates user profile information.", "scope": "SupabaseService", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] verify_email(self, token: str, email: str)", "description": "Verifies user email with a token and email.", "scope": "SupabaseService", "scopeKind": "class"}], "calls": ["create_client", "self.supabase.auth.sign_up", "self.supabase.auth.sign_in_with_password", "self.supabase.auth.get_user", "self.supabase.auth.refresh_session", "self.supabase.auth.sign_out", "self.supabase.auth.reset_password_email", "self.supabase.auth.update", "self.supabase.auth.verify_otp", "self.supabase.auth.set_session"], "search-terms": ["supabase_auth_backend", "SupabaseService", "sign_up_user", "auth.sign_up", "auth.sign_in_with_password", "auth.get_user", "auth.refresh_session", "auth.sign_out", "auth.reset_password_email", "auth.update", "auth.verify_otp"], "state": 2, "file_id": 9, "knowledge_revision": 50, "git_revision": "", "revision_history": [{"19": ""}, {"50": ""}], "ctags": [{"_type": "tag", "name": "SupabaseService", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^class SupabaseService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "get_user_by_token", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^    async def get_user_by_token(self, access_token: str) -> Tuple[bool, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self, access_token: str)", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "refresh_session", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^    async def refresh_session(self, refresh_token: str) -> Tuple[bool, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self, refresh_token: str)", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "reset_password", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^    async def reset_password(self, email: str) -> Tuple[bool, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self, email: str)", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "sign_in_user", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^    async def sign_in_user(self, email: str, password: str) -> Tuple[bool, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self, email: str, password: str)", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "sign_out_user", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^    async def sign_out_user(self, access_token: str) -> Tuple[bool, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self, access_token: str)", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "sign_up_user", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^    async def sign_up_user(self, email: str, password: str, user_metadata: Dict[str, Any]) -> Tu/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self, email: str, password: str, user_metadata: Dict[str, Any])", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "supabase_service", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^supabase_service = SupabaseService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_user", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^    async def update_user(self, access_token: str, updates: Dict[str, Any]) -> Tuple[bool, Dict[/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self, access_token: str, updates: Dict[str, Any])", "scope": "SupabaseService", "scopeKind": "class"}, {"_type": "tag", "name": "verify_email", "path": "/home/kavia/workspace/code-generation/secure-user-authentication-platform-11890-11899/supabase_auth_backend/src/services/supabase_service.py", "pattern": "/^    async def verify_email(self, token: str, email: str) -> Tuple[bool, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self, token: str, email: str)", "scope": "SupabaseService", "scopeKind": "class"}], "hash": "17ff8ef3c81225254441712006f5271f", "format-version": 4, "code-base-name": "supabase_auth_backend", "filename": "supabase_auth_backend/src/services/supabase_service.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "supabase_service = SupabaseService()", "scope": "", "scopeKind": "", "description": "unavailable"}]}