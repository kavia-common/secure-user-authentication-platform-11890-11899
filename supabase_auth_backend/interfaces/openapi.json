{
  "openapi": "3.1.0",
  "info": {
    "title": "Supabase Authentication Backend",
    "description": "\n    A comprehensive authentication backend powered by Supabase with advanced security features.\n    \n    ## Features\n    \n    * **User Registration & Login** - Secure user account creation and authentication\n    * **Email Verification** - Mandatory email verification for account activation\n    * **Two-Factor Authentication** - Email-based OTP 2FA for enhanced security\n    * **Session Management** - JWT-based sessions with automatic timeout and activity tracking\n    * **Password Reset** - Secure password reset flow via email\n    * **User Profile Management** - CRUD operations for user profile data\n    * **Protected Dashboard** - Secure dashboard with user statistics and activity\n    * **Security Monitoring** - Real-time security status and recommendations\n    \n    ## Authentication Flow\n    \n    1. **Sign Up** - Create account with email/password and profile information\n    2. **Email Verification** - Verify email address via token sent to email\n    3. **Login** - Authenticate with email/password (requires verified email)\n    4. **2FA** - Complete mandatory 2FA via email OTP\n    5. **Access Protected Resources** - Use JWT token for authenticated requests\n    \n    ## Security Features\n    \n    * Strong password requirements with validation\n    * Email verification mandatory before login\n    * Two-factor authentication required for all users\n    * Session timeout after 30 minutes of inactivity\n    * Multiple session management and monitoring\n    * Comprehensive security scoring and recommendations\n    \n    ## API Usage\n    \n    ### Authentication Required\n    Most endpoints require authentication via Bearer token in the Authorization header:\n    ```\n    Authorization: Bearer <your-jwt-token>\n    ```\n    \n    ### 2FA Required\n    Endpoints marked with \ud83d\udd10 require completed two-factor authentication.\n    \n    ### WebSocket Support\n    Real-time session monitoring and security alerts available via WebSocket connections.\n    Connect to `/ws` endpoint with valid authentication token.\n    ",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User Sign Up",
        "description": "Register a new user account with email verification required",
        "operationId": "sign_up_auth_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User Login",
        "description": "Authenticate user with email and password, returns access token for 2FA completion",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User Logout",
        "description": "Sign out user and invalidate session",
        "operationId": "logout_auth_logout_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HTTPAuthorizationCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request Password Reset",
        "description": "Send password reset email to user",
        "operationId": "forgot_password_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset Password",
        "description": "Reset user password with token",
        "operationId": "reset_password_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/auth/verify-email": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify Email",
        "description": "Verify user email with token",
        "operationId": "verify_email_auth_verify_email_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/2fa/send-otp": {
      "post": {
        "tags": [
          "Two-Factor Authentication"
        ],
        "summary": "Send 2FA OTP",
        "description": "Send OTP code via email for two-factor authentication",
        "operationId": "send_2fa_otp_2fa_send_otp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_send_2fa_otp_2fa_send_otp_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/2fa/verify-otp": {
      "post": {
        "tags": [
          "Two-Factor Authentication"
        ],
        "summary": "Verify 2FA OTP",
        "description": "Verify OTP code and complete two-factor authentication",
        "operationId": "verify_2fa_otp_2fa_verify_otp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_2fa_otp_2fa_verify_otp_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/2fa/resend-otp": {
      "post": {
        "tags": [
          "Two-Factor Authentication"
        ],
        "summary": "Resend 2FA OTP",
        "description": "Resend OTP code for two-factor authentication",
        "operationId": "resend_2fa_otp_2fa_resend_otp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_resend_2fa_otp_2fa_resend_otp_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/2fa/status": {
      "get": {
        "tags": [
          "Two-Factor Authentication"
        ],
        "summary": "Get 2FA Status",
        "description": "Check if 2FA has been completed for the current session",
        "operationId": "get_2fa_status_2fa_status_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HTTPAuthorizationCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "User Profile"
        ],
        "summary": "Get User Profile",
        "description": "Get current user's profile information",
        "operationId": "get_user_profile_user_profile_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Current User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User Profile"
        ],
        "summary": "Update User Profile",
        "description": "Update current user's profile information",
        "operationId": "update_user_profile_user_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_user_profile_user_profile_put"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/account": {
      "delete": {
        "tags": [
          "User Profile"
        ],
        "summary": "Delete User Account",
        "description": "Delete current user's account permanently",
        "operationId": "delete_user_account_user_account_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Current User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/sessions": {
      "get": {
        "tags": [
          "User Profile"
        ],
        "summary": "Get User Sessions",
        "description": "Get all active sessions for the current user",
        "operationId": "get_user_sessions_user_sessions_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Current User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/user/sessions/{session_id}": {
      "delete": {
        "tags": [
          "User Profile"
        ],
        "summary": "Revoke User Session",
        "description": "Revoke a specific user session",
        "operationId": "revoke_user_session_user_sessions__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Current User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dashboard/": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Dashboard Data",
        "description": "Get comprehensive dashboard data for authenticated user",
        "operationId": "get_dashboard_data_dashboard__get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Current User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dashboard/activity": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get User Activity",
        "description": "Get recent user activity and session history",
        "operationId": "get_user_activity_dashboard_activity_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Current User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dashboard/security": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get Security Overview",
        "description": "Get security status and recommendations",
        "operationId": "get_security_overview_dashboard_security_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Current User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Check if the API is running and healthy",
        "operationId": "health_check__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "API Status",
        "description": "Get detailed API status and statistics",
        "operationId": "api_status_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_resend_2fa_otp_2fa_resend_otp_post": {
        "properties": {
          "request": {
            "$ref": "#/components/schemas/TwoFactorSendRequest"
          },
          "credentials": {
            "$ref": "#/components/schemas/HTTPAuthorizationCredentials"
          }
        },
        "type": "object",
        "required": [
          "request"
        ],
        "title": "Body_resend_2fa_otp_2fa_resend_otp_post"
      },
      "Body_send_2fa_otp_2fa_send_otp_post": {
        "properties": {
          "request": {
            "$ref": "#/components/schemas/TwoFactorSendRequest"
          },
          "credentials": {
            "$ref": "#/components/schemas/HTTPAuthorizationCredentials"
          }
        },
        "type": "object",
        "required": [
          "request"
        ],
        "title": "Body_send_2fa_otp_2fa_send_otp_post"
      },
      "Body_update_user_profile_user_profile_put": {
        "properties": {
          "profile_data": {
            "$ref": "#/components/schemas/UserProfileUpdateRequest"
          },
          "current_user": {
            "additionalProperties": true,
            "type": "object",
            "title": "Current User"
          }
        },
        "type": "object",
        "required": [
          "profile_data"
        ],
        "title": "Body_update_user_profile_user_profile_put"
      },
      "Body_verify_2fa_otp_2fa_verify_otp_post": {
        "properties": {
          "request": {
            "$ref": "#/components/schemas/TwoFactorRequest"
          },
          "credentials": {
            "$ref": "#/components/schemas/HTTPAuthorizationCredentials"
          }
        },
        "type": "object",
        "required": [
          "request"
        ],
        "title": "Body_verify_2fa_otp_2fa_verify_otp_post"
      },
      "DashboardData": {
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserResponse",
            "description": "User information"
          },
          "session_info": {
            "additionalProperties": true,
            "type": "object",
            "title": "Session Info",
            "description": "Session information"
          },
          "stats": {
            "additionalProperties": true,
            "type": "object",
            "title": "Stats",
            "description": "User statistics"
          }
        },
        "type": "object",
        "required": [
          "user",
          "session_info",
          "stats"
        ],
        "title": "DashboardData",
        "description": "Dashboard data response model"
      },
      "HTTPAuthorizationCredentials": {
        "properties": {
          "scheme": {
            "type": "string",
            "title": "Scheme"
          },
          "credentials": {
            "type": "string",
            "title": "Credentials"
          }
        },
        "type": "object",
        "required": [
          "scheme",
          "credentials"
        ],
        "title": "HTTPAuthorizationCredentials",
        "description": "The HTTP authorization credentials in the result of using `HTTPBearer` or\n`HTTPDigest` in a dependency.\n\nThe HTTP authorization header value is split by the first space.\n\nThe first part is the `scheme`, the second part is the `credentials`.\n\nFor example, in an HTTP Bearer token scheme, the client will send a header\nlike:\n\n```\nAuthorization: Bearer deadbeef12346\n```\n\nIn this case:\n\n* `scheme` will have the value `\"Bearer\"`\n* `credentials` will have the value `\"deadbeef12346\"`"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MessageResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Response message"
          },
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Operation success status"
          }
        },
        "type": "object",
        "required": [
          "message",
          "success"
        ],
        "title": "MessageResponse",
        "description": "Generic message response model"
      },
      "PasswordResetConfirmRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Password reset token"
          },
          "new_password": {
            "type": "string",
            "minLength": 8,
            "title": "New Password",
            "description": "New password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "new_password"
        ],
        "title": "PasswordResetConfirmRequest",
        "description": "Password reset confirmation model"
      },
      "PasswordResetRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User's email address"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "PasswordResetRequest",
        "description": "Password reset request model"
      },
      "TokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token",
            "description": "JWT access token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "description": "Token type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "description": "Token expiration time in seconds"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse",
            "description": "User information"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "expires_in",
          "user"
        ],
        "title": "TokenResponse",
        "description": "Token response model"
      },
      "TwoFactorRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User's email address"
          },
          "otp_code": {
            "type": "string",
            "maxLength": 6,
            "minLength": 6,
            "title": "Otp Code",
            "description": "6-digit OTP code"
          }
        },
        "type": "object",
        "required": [
          "email",
          "otp_code"
        ],
        "title": "TwoFactorRequest",
        "description": "Two-factor authentication request model"
      },
      "TwoFactorSendRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User's email address"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "TwoFactorSendRequest",
        "description": "Request to send 2FA OTP model"
      },
      "UserLoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "User password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserLoginRequest",
        "description": "User login request model"
      },
      "UserProfileUpdateRequest": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "User's first name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "User's last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "User's phone number"
          }
        },
        "type": "object",
        "title": "UserProfileUpdateRequest",
        "description": "User profile update request model"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "User's unique identifier"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "User's email address"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "User's first name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "User's last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "User's phone number"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified",
            "description": "Whether email is verified"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Account creation timestamp"
          },
          "last_sign_in_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sign In At",
            "description": "Last sign in timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "email_verified",
          "created_at"
        ],
        "title": "UserResponse",
        "description": "User response model"
      },
      "UserSignUpRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password",
            "description": "User password (minimum 8 characters)"
          },
          "first_name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "First Name",
            "description": "User's first name"
          },
          "last_name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Last Name",
            "description": "User's last name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "User's phone number"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password",
          "first_name",
          "last_name"
        ],
        "title": "UserSignUpRequest",
        "description": "User registration request model"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from login endpoint"
      }
    }
  }
}